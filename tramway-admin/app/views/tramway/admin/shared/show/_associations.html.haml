- if object.class.show_associations.map(&:to_s).include? association.name.to_s
  %tr
    %td
      = model_class.human_attribute_name association.name
      %hr
      = link_to "#{I18n.t('helpers.actions.add')} #{model_class.human_attribute_name(association.name).singularize.downcase}", new_associated_record_path(association: association, object: object, as: object.send("#{association.name}_as")), class: 'btn btn-primary'
    - association_state_machines = object.send("#{association.name}_state_machines")
    %td{ colspan: 2 }
      %table.table.table-striped.table-bordered
        - object.send(association.name)&.each do |association_object|
          %tr{ id: "#{association.name}_#{association_object.id}" }
            %td
              = association_object.id
            %td
              = link_to association_object.name, record_path(association_object.id, model: association.options[:class_name])
            %td
              - association_state_machines.each do |state_method|
                = state_events_buttons association_object, state_method: state_method, model_param_name: :record, controller: 'tramway/admin/records', action: :update, parameters: { redirect: current_model_record_path(object.id), model: association_object.class.model_name }, button_options: { class: :smart_button }
            %td
              - if ::Tramway::Admin.action_is_available?(association_object, project: (@application_engine || @application.name), model: association_object.model.class, role: current_user.role, action: :destroy)
                = delete_button url: record_path(association_object.id, model: association.options[:class_name], redirect: current_model_record_path(object.id)), button_options: { class: 'btn btn-xs btn-danger delete' } do
                  = fa_icon 'trash-alt'
